{% macro deploy(mem_limit="100mi", cpu_limit="100m") %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ namespace }}
  labels:
    role: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      role: nginx
  template:
    metadata:
      labels:
        role: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.17
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: "{{ cpu_limit }}"
            memory: "{{ mem_limit }}"
          limits:
            cpu: "{{ cpu_limit }}"
            memory: "{{ mem_limit }}"
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config-volume
          readOnly: true
      volumes:
      - name: nginx-config-volume
        configMap:
          defaultMode: 420
          name: nginx-config
{% endmacro %}
{% if cluster == "staging" %}
# Give staging smaller resources than production.
{%- set mem_limit="100Mi" %}
{%- set cpu_limit="100m" %}
{% else %}
# Give not-staging (e.g. production) more resources.
{%- set mem_limit="1Gi" %}
{%- set cpu_limit="1" %}
{% endif %}
# We created a macro that will output the above
{{ deploy(mem_limit=mem_limit, cpu_limit=cpu_limit) }}
# vim:ft=ansible:
